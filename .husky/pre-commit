# VÃ©rifier s'il y a des fichiers stagÃ©s
if git diff --cached --quiet; then
  echo "Aucun fichier stagÃ©, skip versioning"
  exit 0
fi

# RÃ©cupÃ©rer la derniÃ¨re version taggÃ©e
LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null)

# Si aucun tag n'existe, c'est la premiÃ¨re release
if [ -z "$LAST_TAG" ]; then
  echo "ðŸ†• PremiÃ¨re release dÃ©tectÃ©e"
else
  # VÃ©rifier s'il y a des commits depuis le dernier tag
  COMMITS_SINCE=$(git rev-list ${LAST_TAG}..HEAD --count 2>/dev/null)
  if [ "$COMMITS_SINCE" -eq "0" ]; then
    echo "Aucun nouveau commit depuis ${LAST_TAG}, skip versioning"
    exit 0
  fi
fi

# ExÃ©cuter standard-version pour bumper la version
echo "ðŸ”„ Versionnage automatique en cours..."
npm run release -- --skip.commit --skip.tag

# Ajouter les fichiers modifiÃ©s par standard-version au commit
git add package.json package-lock.json CHANGELOG.md

echo "âœ… Version mise Ã  jour automatiquement"
